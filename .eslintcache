[{"D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\index.js":"1","D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\App.js":"2","D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\reportWebVitals.js":"3","D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\container\\home\\home.js":"4","D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\component\\layout\\layout.js":"5","D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\component\\header\\header.js":"6","D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\container\\signin\\singin.js":"7","D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\store\\store.js":"8","D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\reducer\\index.js":"9","D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\reducer\\authReducer.js":"10","D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\action\\type.js":"11","D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\action\\authAction.js":"12","D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\helper\\axios.js":"13","D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\HOC\\privateRoutes.js":"14","D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\container\\signup\\signup.js":"15","D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\component\\sidebar\\sidebar.js":"16","D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\container\\category\\category.js":"17","D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\action\\initialDataAction.js":"18","D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\reducer\\categoryReducer.js":"19","D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\action\\categoryAction.js":"20","D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\container\\product\\product.js":"21","D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\reducer\\productReducer.js":"22","D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\action\\productAction.js":"23"},{"size":753,"mtime":1610901854542,"results":"24","hashOfConfig":"25"},{"size":1248,"mtime":1611247166988,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"25"},{"size":208,"mtime":1611053697104,"results":"28","hashOfConfig":"25"},{"size":292,"mtime":1611053766124,"results":"29","hashOfConfig":"25"},{"size":1338,"mtime":1611139176633,"results":"30","hashOfConfig":"25"},{"size":1797,"mtime":1610946668606,"results":"31","hashOfConfig":"25"},{"size":221,"mtime":1611395379169,"results":"32","hashOfConfig":"25"},{"size":337,"mtime":1611247500938,"results":"33","hashOfConfig":"25"},{"size":1382,"mtime":1610971653540,"results":"34","hashOfConfig":"25"},{"size":1101,"mtime":1611383487510,"results":"35","hashOfConfig":"25"},{"size":1830,"mtime":1611309311839,"results":"36","hashOfConfig":"25"},{"size":562,"mtime":1610990142199,"results":"37","hashOfConfig":"25"},{"size":482,"mtime":1610958560034,"results":"38","hashOfConfig":"25"},{"size":2975,"mtime":1610992521008,"results":"39","hashOfConfig":"25"},{"size":548,"mtime":1611246628678,"results":"40","hashOfConfig":"25"},{"size":11257,"mtime":1611309387235,"results":"41","hashOfConfig":"25"},{"size":578,"mtime":1611309313043,"results":"42","hashOfConfig":"25"},{"size":1155,"mtime":1611670742143,"results":"43","hashOfConfig":"25"},{"size":1692,"mtime":1611309303983,"results":"44","hashOfConfig":"25"},{"size":14535,"mtime":1611382798654,"results":"45","hashOfConfig":"25"},{"size":512,"mtime":1611247467321,"results":"46","hashOfConfig":"25"},{"size":1134,"mtime":1611377954862,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"svqg4k",{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"51"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"51"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"51"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"51"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"51"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"51"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"51"},"D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\index.js",["105","106"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport store from \"./store/store\";\nimport { Provider } from \"react-redux\";\n\nwindow.store = store;\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["107","108"],"D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\App.js",["109","110","111"],"import \"./App.css\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Home from \"./container/home/home\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Signin from \"./container/signin/singin\";\nimport { isLogged } from \"./action/authAction\";\nimport Private from \"./HOC/privateRoutes\";\nimport Signup from \"./container/signup/signup\";\nimport Category from \"./container/category/category\";\nimport { initialData } from \"./action/initialDataAction\";\nimport Product from \"./container/product/product\";\nfunction App() {\n  const dispatch = useDispatch();\n  const auth = useSelector((state) => state.auth);\n  useEffect(async () => {\n    if (!auth.authenticate) {\n      dispatch(isLogged());\n    }\n\n    if (auth.authenticate) {\n      dispatch(initialData());\n    }\n  }, [auth.authenticate]);\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Private path=\"/\" exact component={Home} />\n        <Private path=\"/category\" component={Category} />\n        <Private path=\"/product\" component={Product} />\n        <Route path=\"/signin\" component={Signin} />\n        <Route path=\"/signup\" component={Signup} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\reportWebVitals.js",[],"D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\container\\home\\home.js",[],"D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\component\\layout\\layout.js",[],"D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\component\\header\\header.js",["112"],"import React, { useState } from \"react\";\r\nimport {} from \"react-bootstrap\";\r\nimport \"./style.css\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { signout } from \"../../action/authAction\";\r\n\r\nfunction Header() {\r\n  const auth = useSelector((state) => state.auth);\r\n  const [logout, setLogout] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(signout());\r\n    setLogout(true);\r\n  };\r\n\r\n  const renderLogged = () => {\r\n    return (\r\n      <span onClick={handleLogout}>\r\n        <p>signout</p>\r\n      </span>\r\n    );\r\n  };\r\n  const renderNonLogged = () => {\r\n    return (\r\n      <>\r\n        <NavLink to=\"/signin\">signin</NavLink>\r\n        <NavLink to=\"/signup\">signup</NavLink>\r\n        {logout ? <Redirect to=\"/signin\" /> : null}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"grid\">\r\n        <div className=\"header-1\">\r\n          <NavLink to=\"/\">\r\n            {\" \"}\r\n            <img src=\"img/aws.svg\" width=\"80px\" />{\" \"}\r\n          </NavLink>\r\n        </div>\r\n        <div className=\"header-2\">2</div>\r\n        <div className=\"header-3\">\r\n          {auth.authenticate ? renderLogged() : renderNonLogged()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\container\\signin\\singin.js",[],"D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\store\\store.js",[],"D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\reducer\\index.js",[],"D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\reducer\\authReducer.js",["113","114"],"import { authType } from \"../action/type\";\r\n\r\nconst initial = {\r\n  authenticate: false,\r\n  authenticating: false,\r\n  error: null,\r\n  user: [],\r\n  loading: false,\r\n};\r\n\r\nexport default (state = initial, action) => {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case authType.LOGIN_REQUEST:\r\n      state = {\r\n        ...state,\r\n        authenticating: true,\r\n      };\r\n      break;\r\n    case authType.LOGIN_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        authenticate: true,\r\n        authenticating: false,\r\n        user: action.payload.user,\r\n        error: null,\r\n      };\r\n      break;\r\n    case authType.LOGIN_FAILURE:\r\n      state = {\r\n        ...state,\r\n        authenticating: false,\r\n        error: action.payload.error,\r\n      };\r\n      break;\r\n    case authType.LOGOUT_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case authType.LOGOUT_SUCCESS:\r\n      state = {\r\n        ...initial,\r\n      };\r\n      break;\r\n    case authType.SIGNUP_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case authType.SIGNUP_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n      break;\r\n    case authType.SIGNUP_FAILURE:\r\n      state = {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\action\\type.js",[],"D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\action\\authAction.js",[],"D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\helper\\axios.js",["115"],"import axios from \"axios\";\r\nimport store from \"../store/store\";\r\nimport { authType } from \"../action/type\";\r\n\r\nexport const axiosInstance = axios.create({\r\n  baseURL: \"http://localhost:2000/api\",\r\n  withCredentials: true,\r\n});\r\n\r\naxiosInstance.interceptors.response.use(\r\n  (res) => {\r\n    return res;\r\n  },\r\n  (error) => {\r\n    const { status } = error.response;\r\n    if (status == 401) {\r\n      localStorage.clear();\r\n      store.dispatch({ type: authType.LOGOUT_SUCCESS });\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n","D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\HOC\\privateRoutes.js",[],"D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\container\\signup\\signup.js",[],"D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\component\\sidebar\\sidebar.js",[],"D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\container\\category\\category.js",["116","117"],"import React, { useState } from \"react\";\r\nimport Layout from \"../../component/layout/layout\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport CheckboxTree from \"react-checkbox-tree\";\r\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport \"./style.css\";\r\nimport \"react-checkbox-tree/lib/react-checkbox-tree.css\";\r\nimport {\r\n  IoMdCheckboxOutline,\r\n  IoMdCheckbox,\r\n  IoIosArrowDown,\r\n  IoIosArrowForward,\r\n  IoMdSquareOutline,\r\n} from \"react-icons/io\";\r\nimport {\r\n  addCategory,\r\n  deleteCategory,\r\n  getCategory,\r\n  upDateCategory,\r\n} from \"../../action/categoryAction\";\r\n\r\nfunction Category() {\r\n  const category = useSelector((state) => state.category);\r\n  const [checked, setChecked] = useState([]);\r\n  const [expanded, setExpanded] = useState([]);\r\n  const [categoryname, setCategoryName] = useState(\"\");\r\n  const [categoryid, setCategoryid] = useState(\"\");\r\n  const [checkArray, setCheckArray] = useState([]);\r\n  const [expandArray, setExpandArray] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n\r\n  const [editmodal, setEditmodal] = useState(false);\r\n\r\n  const handleCloseEdit = () => setEditmodal(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const dispatch = useDispatch();\r\n  //   if (category.category.length == 0) {\r\n  //     return null;\r\n  //   }\r\n  const renderCategory = (category) => {\r\n    return category.map((cat) => ({\r\n      label: cat.name,\r\n      value: cat._id,\r\n      children: cat.children.length > 0 && renderCategory(cat.children),\r\n    }));\r\n    //   <li key={cat._id}>\r\n    //     {cat.name}\r\n    //     {cat.children.length > 0 ? (\r\n    //       <ul>{renderCategory(cat.children)}</ul>\r\n    //     ) : null}\r\n    //   </li>\r\n  };\r\n  const renderOption = (category, option = []) => {\r\n    for (let cat of category) {\r\n      option.push(\r\n        <option key={cat._id} value={cat._id}>\r\n          {cat.name}\r\n        </option>\r\n      );\r\n      if (cat.children.length > 0) {\r\n        renderOption(cat.children, option);\r\n      }\r\n    }\r\n    return option;\r\n  };\r\n  const handleSave = () => {\r\n    const payload = { name: categoryname, parentId: categoryid };\r\n    dispatch(addCategory(payload)).then(() => {\r\n      dispatch(getCategory());\r\n    });\r\n    setCategoryid(\"\");\r\n    setCategoryName(\"\");\r\n  };\r\n  const renderAddModal = () => {\r\n    return (\r\n      <>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Modal heading</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            {/* <Form.Group controlId=\"formBasicPassword\"> */}\r\n            <Form.Label>Category name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Category name\"\r\n              value={categoryname}\r\n              onChange={(e) => setCategoryName(e.target.value)}\r\n            />\r\n            {/* </Form.Group> */}\r\n            <select\r\n              value={categoryid}\r\n              onChange={(e) => setCategoryid(e.target.value)}\r\n            >\r\n              <option>Selection Category</option>\r\n              {renderOption(category.category)}\r\n            </select>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={handleSave}>\r\n              Save Changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  };\r\n  const createOption = (category, option = []) => {\r\n    for (let cat of category) {\r\n      option.push({\r\n        _id: cat._id,\r\n        name: cat.name,\r\n        parentId: cat.parentId,\r\n      });\r\n      if (cat.children.length > 0) {\r\n        createOption(cat.children, option);\r\n      }\r\n    }\r\n    return option;\r\n  };\r\n  const handleEdit = () => {\r\n    const categories = createOption(category.category);\r\n    let listchecked = [];\r\n    let listexpanded = [];\r\n\r\n    expanded.forEach((data) =>\r\n      listexpanded.push(categories.find((cat) => cat._id === data))\r\n    );\r\n\r\n    checked.forEach((data) =>\r\n      listchecked.push(categories.find((cat) => cat._id === data))\r\n    );\r\n    setCheckArray(listchecked);\r\n    setExpandArray(listexpanded);\r\n    setEditmodal(true);\r\n  };\r\n  const updateInput = (key, value, index, type) => {\r\n    if (type === \"expanded\") {\r\n      const updateExpandedArray = expandArray.map((item, _index) =>\r\n        index == _index ? { ...item, [key]: value } : item\r\n      );\r\n      setExpandArray(updateExpandedArray);\r\n    } else if (type === \"checked\") {\r\n      const updateCheckedArray = checkArray.map((item, _index) =>\r\n        index == _index ? { ...item, [key]: value } : item\r\n      );\r\n      setCheckArray(updateCheckedArray);\r\n    }\r\n  };\r\n  const handleEditModal = () => {\r\n    const listupdate = [];\r\n    expandArray.forEach((item, index) => {\r\n      listupdate.push({\r\n        _id: item._id,\r\n        name: item.name,\r\n        parentId: item.parentId,\r\n        category: item.category,\r\n      });\r\n    });\r\n    checkArray.forEach((item, index) => {\r\n      listupdate.push({\r\n        _id: item._id,\r\n        name: item.name,\r\n        parentId: item.parentId,\r\n        category: item.category,\r\n      });\r\n    });\r\n\r\n    // console.log(listupdate);\r\n    // const payload = { expandArray, checkArray };\r\n    dispatch(upDateCategory(listupdate)).then(() => {\r\n      dispatch(getCategory());\r\n    });\r\n    handleCloseEdit();\r\n  };\r\n  const renderEditmodal = () => {\r\n    return (\r\n      <>\r\n        <Modal show={editmodal} onHide={handleCloseEdit}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Modal heading</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            Expanded\r\n            {expandArray.length > 0\r\n              ? expandArray.map((cat, index) => (\r\n                  <>\r\n                    <Row key={index}>\r\n                      <Col>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          placeholder=\"Category name\"\r\n                          value={cat.name}\r\n                          onChange={(e) =>\r\n                            updateInput(\r\n                              \"name\",\r\n                              e.target.value,\r\n                              index,\r\n                              \"expanded\"\r\n                            )\r\n                          }\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                        {cat.parentId ? (\r\n                          <select\r\n                            value={cat.parentId}\r\n                            onChange={(e) =>\r\n                              updateInput(\r\n                                \"parentId\",\r\n                                e.target.value,\r\n                                index,\r\n                                \"expanded\"\r\n                              )\r\n                            }\r\n                          >\r\n                            {/* <option>Select Category</option> */}\r\n                            {createOption(category.category).map((cat) => (\r\n                              <option key={cat._id} value={cat._id}>\r\n                                {cat.name}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                        ) : (\r\n                          <select disabled>\r\n                            <option>Select Category</option>\r\n                          </select>\r\n                        )}\r\n                      </Col>\r\n                    </Row>\r\n                    <br />\r\n                  </>\r\n                ))\r\n              : null}\r\n            <br />\r\n            Checked\r\n            {checkArray.length > 0\r\n              ? checkArray.map((cat, index) => (\r\n                  <>\r\n                    <Row key={index}>\r\n                      <Col>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          placeholder=\"Category name\"\r\n                          value={cat.name}\r\n                          onChange={(e) =>\r\n                            updateInput(\r\n                              \"name\",\r\n                              e.target.value,\r\n                              index,\r\n                              \"checked\"\r\n                            )\r\n                          }\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                        <select\r\n                          value={cat.parentId}\r\n                          onChange={(e) =>\r\n                            updateInput(\r\n                              \"parentId\",\r\n                              e.target.value,\r\n                              index,\r\n                              \"checked\"\r\n                            )\r\n                          }\r\n                        >\r\n                          {/* <option>Select Category</option> */}\r\n                          {createOption(category.category).map((cat) => (\r\n                            <option key={cat._id} value={cat._id}>\r\n                              {cat.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </Col>\r\n                    </Row>\r\n                  </>\r\n                ))\r\n              : null}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleCloseEdit}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={handleEditModal}>\r\n              Save Changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  };\r\n  const handleDelete = () => {\r\n    const listDelete = [];\r\n    checked.forEach((data) => listDelete.push(data));\r\n    // console.log(listDelete);\r\n    // expanded.forEach((data) => listDelete.push(data));\r\n    dispatch(deleteCategory(listDelete)).then(() => {\r\n      dispatch(getCategory());\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Layout sidebar>\r\n        {/* <div className=\"category-list\">\r\n          <ul>{renderCategory(category.category)}</ul>\r\n        </div> */}\r\n        {renderAddModal()}\r\n        {renderEditmodal()}\r\n        <button style={{ float: \"right\" }} onClick={handleShow}>\r\n          Add\r\n        </button>\r\n        <button style={{ float: \"right\" }} onClick={handleEdit}>\r\n          Edit\r\n        </button>\r\n        <button style={{ float: \"right\" }} onClick={handleDelete}>\r\n          delete\r\n        </button>\r\n\r\n        <CheckboxTree\r\n          nodes={renderCategory(category.category)}\r\n          checked={checked}\r\n          expanded={expanded}\r\n          onCheck={(checked) => setChecked(checked)}\r\n          onExpand={(expanded) => setExpanded(expanded)}\r\n          icons={{\r\n            check: <IoMdCheckbox />,\r\n            uncheck: <IoMdSquareOutline />,\r\n            halfCheck: <IoMdCheckboxOutline />,\r\n            expandClose: <IoIosArrowForward />,\r\n            expandOpen: <IoIosArrowDown />,\r\n          }}\r\n        />\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Category;\r\n","D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\action\\initialDataAction.js",[],"D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\reducer\\categoryReducer.js",["118","119"],"D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\action\\categoryAction.js",["120"],"import { category, categoryType } from \"./type\";\r\nimport axios from \"../helper/axios\";\r\n\r\nexport const addCategory = (payload) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: categoryType.ADD_CATEGORY_REQUEST });\r\n    const res = await axios.post(\"/create/category\", { payload });\r\n    if (res.status === 201) {\r\n      console.log(\"add new category ok\");\r\n    }\r\n  };\r\n};\r\n\r\nexport const getCategory = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: categoryType.GET_ALL_CATEGORTY_REQUEST });\r\n      const res = await axios.post(\"/get/category\");\r\n      console.log(res.status);\r\n      if (res.status === 200) {\r\n        dispatch({\r\n          type: categoryType.GET_ALL_CATEGORTY_SUCCESS,\r\n          payload: { category: res.data.categoryList },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error.response);\r\n    }\r\n  };\r\n};\r\n\r\nexport const upDateCategory = (payload) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await axios.post(\"/update/category\", { payload });\r\n      if (res.status === 200) {\r\n        // console.log(\"test\");\r\n        // const res = await axios.post(\"/get/category\");\r\n        // dispatch({\r\n        //   type: categoryType.GET_ALL_CATEGORTY_SUCCESS,\r\n        //   payload: { category: res.data.categoryList },\r\n        // });\r\n      }\r\n    } catch (error) {\r\n      console.log(error.response);\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteCategory = (payload) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await axios.post(\"/delete/category\", { payload });\r\n      if (res.status === 200) {\r\n      }\r\n    } catch (error) {\r\n      console.log(error.response);\r\n    }\r\n  };\r\n};\r\n","D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\container\\product\\product.js",["121","122","123","124","125","126"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../component/layout/layout\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport { IoMdAddCircle } from \"react-icons/io\";\r\nimport { IoTrashOutline } from \"react-icons/io5\";\r\nimport {\r\n  createProduct,\r\n  getProduct,\r\n  deleteProductIndatabase,\r\n} from \"../../action/productAction\";\r\nimport { MdCheckBoxOutlineBlank, MdCheckBox } from \"react-icons/md\";\r\nimport { ImCross } from \"react-icons/im\";\r\nimport { AiFillDelete } from \"react-icons/ai\";\r\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\r\n\r\nfunction Product() {\r\n  const product = useSelector((state) => state.product);\r\n  const [show, setShow] = useState(false);\r\n  const [showAdd, setShowAdd] = useState(false);\r\n  const [productname, setProductname] = useState(\"\");\r\n  const [quantity, setQuantity] = useState(\"\");\r\n  const [price, setPrict] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [productPicture, setProductPicture] = useState([]);\r\n  const [category, setCategory] = useState([]);\r\n\r\n  const [inputname, setInputname] = useState(\"\");\r\n  const [inputquantity, setInputquantity] = useState(\"\");\r\n  const [inputprice, setInputprice] = useState(\"\");\r\n  const [inputcategory, setInputcategory] = useState(\"\");\r\n  const [inputdescription, setInputdescription] = useState(\"\");\r\n  const [inputpicture, setInputpicture] = useState([]);\r\n\r\n  const [deletelist, setDeletelist] = useState([]);\r\n  const [senddeletelist, setSenddeletelist] = useState([]);\r\n  const categoryStore = useSelector((state) => state.category);\r\n  const [deleteProduct, setDeleteProduct] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (product.product.length > 0) {\r\n      // console.log(product.product.length);\r\n      const test = [];\r\n      for (let i = 0; i < product.product.length; i++) {\r\n        test.push(false);\r\n      }\r\n      // test[4] = true;\r\n      setDeletelist(test);\r\n    }\r\n  }, [product.product]);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = (product) => {\r\n    setProductname(product.name);\r\n    setQuantity(product.quantity);\r\n    setPrict(product.price);\r\n    setDescription(product.description);\r\n    setProductPicture(product.picture);\r\n    setCategory(product.category);\r\n    setShow(true);\r\n  };\r\n\r\n  const handleChecked = (index, type, id, name) => {\r\n    const list = [...deletelist];\r\n    if (type == \"checked\") {\r\n      list[index] = true;\r\n      setSenddeletelist([...senddeletelist, { _id: id, name: name }]);\r\n    } else if (type == \"unchecked\") {\r\n      list[index] = false;\r\n      let listdelete;\r\n      listdelete = senddeletelist.filter((data) => data._id != id);\r\n      setSenddeletelist(listdelete);\r\n    }\r\n\r\n    setDeletelist(list);\r\n  };\r\n  const renderTableProduct = () => {\r\n    return (\r\n      <Table responsive=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Product Name</th>\r\n            <th>Description</th>\r\n            <th>Quantity</th>\r\n            <th>price</th>\r\n            <th>Category</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {deleteProduct\r\n            ? product.product.length > 0\r\n              ? product.product.map((data, index) => (\r\n                  <tr key={data._id}>\r\n                    <td>\r\n                      {!deletelist[index] ? (\r\n                        <MdCheckBoxOutlineBlank\r\n                          style={{ cursor: \"pointer\" }}\r\n                          onClick={handleChecked.bind(\r\n                            this,\r\n                            index,\r\n                            \"checked\",\r\n                            data._id,\r\n                            data.name\r\n                          )}\r\n                        />\r\n                      ) : (\r\n                        <MdCheckBox\r\n                          style={{ cursor: \"pointer\" }}\r\n                          onClick={handleChecked.bind(\r\n                            this,\r\n                            index,\r\n                            \"unchecked\",\r\n                            data._id\r\n                          )}\r\n                        />\r\n                      )}\r\n                      {/* {index + 1} */}\r\n                    </td>\r\n                    <td>{data.name}</td>\r\n                    <td>{data.description}</td>\r\n                    <td>{data.quantity}</td>\r\n                    <td>{data.price}</td>\r\n                    <td>{data.category ? data.category.name : null}</td>\r\n                  </tr>\r\n                ))\r\n              : null\r\n            : product.product.length > 0\r\n            ? product.product.map((data, index) => (\r\n                <tr\r\n                  key={data._id}\r\n                  onClick={() => handleShow(data)}\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  <td></td>\r\n                  {/* <td>{index + 1}</td> */}\r\n                  <td>{data.name}</td>\r\n                  <td>{data.description}</td>\r\n                  <td>{data.quantity}</td>\r\n                  <td>{data.price}</td>\r\n                  <td>{data.category ? data.category.name : null}</td>\r\n                </tr>\r\n              ))\r\n            : null}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  };\r\n  const renderModalPopup = () => {\r\n    return (\r\n      <Modal show={show} onHide={handleClose} size=\"lg\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Row>\r\n            <Col>\r\n              <p style={{ fontWeight: \"bold\" }}>PRODUCTNAME</p>\r\n              {productname}\r\n            </Col>\r\n            <Col>\r\n              <p style={{ fontWeight: \"bold\" }}>QUANTITY</p>\r\n              {quantity}\r\n            </Col>\r\n            <Col>\r\n              <p style={{ fontWeight: \"bold\" }}>PRICE</p>\r\n              {price}\r\n              <img\r\n                src=\"/img/thailand-baht.png\"\r\n                width=\"20px\"\r\n                style={{ marginBottom: \"5px\" }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <br />\r\n          <Row>\r\n            <Col>\r\n              <p style={{ fontWeight: \"bold\" }}>DESCRIPTION</p>\r\n              {description}\r\n            </Col>\r\n            <Col>\r\n              <p style={{ fontWeight: \"bold\" }}>CATEGORY</p>\r\n              {category.name}\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <br />\r\n          <Row>\r\n            <Col>\r\n              <p style={{ fontWeight: \"bold\" }}>PICTURE</p>\r\n              {productPicture.length > 0\r\n                ? productPicture.map((pic) => (\r\n                    <img\r\n                      src={\"http://localhost:2000/public/\" + pic.img}\r\n                      width=\"150px\"\r\n                      height=\"150px\"\r\n                      className=\"img-thumbnail\"\r\n                      style={{ border: \"0px solid\" }}\r\n                      key={pic._id}\r\n                    />\r\n                  ))\r\n                : null}\r\n            </Col>\r\n          </Row>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleClose}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  };\r\n  const handleCloseAdd = () => {\r\n    setShowAdd(false);\r\n  };\r\n\r\n  const createOption = (category, option = []) => {\r\n    for (let cat of category) {\r\n      option.push({\r\n        _id: cat._id,\r\n        name: cat.name,\r\n      });\r\n      if (cat.children.length > 0) {\r\n        createOption(cat.children, option);\r\n      }\r\n    }\r\n    return option;\r\n  };\r\n  const handleCloseAddProduct = () => {\r\n    const form = new FormData();\r\n    form.append(\"name\", inputname);\r\n    form.append(\"quantity\", inputquantity);\r\n    form.append(\"price\", inputprice);\r\n    form.append(\"description\", inputdescription);\r\n    form.append(\"category\", inputcategory);\r\n    for (let pic of inputpicture) {\r\n      form.append(\"productPictures\", pic);\r\n    }\r\n    dispatch(createProduct(form)).then(() => {\r\n      dispatch(getProduct());\r\n    });\r\n\r\n    setInputname(\"\");\r\n    setInputquantity(\"\");\r\n    setInputpicture(\"\");\r\n    setInputprice(\"\");\r\n    setInputdescription(\"\");\r\n    setInputcategory(\"\");\r\n\r\n    // console.log(\r\n    //   inputname,\r\n    //   inputcategory,\r\n    //   inputquantity,\r\n    //   inputdescription,\r\n    //   inputprice\r\n    // );\r\n  };\r\n\r\n  //   const handlePictureArray = (picture) => {\r\n  //     setInputpicture([...inputpicture, picture]);\r\n  //     console.log(inputpicture);\r\n  //   };\r\n  const handlePictureArray = (e) => {\r\n    setInputpicture([...inputpicture, e.target.files[0]]);\r\n  };\r\n  const handledeletePicture = (name) => {\r\n    let listpicture;\r\n    listpicture = inputpicture.filter((data, index) => index != name);\r\n    setInputpicture(listpicture);\r\n  };\r\n  const renderModalAdd = () => {\r\n    return (\r\n      <Modal show={showAdd} onHide={handleCloseAdd} size=\"lg\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add Product</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Row>\r\n            <Col>\r\n              <Form.Label>Product Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Product name\"\r\n                value={inputname}\r\n                onChange={(e) => setInputname(e.target.value)}\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <Form.Label>Quantity</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Quantity\"\r\n                value={inputquantity}\r\n                onChange={(e) => setInputquantity(e.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <Row>\r\n            <Col>\r\n              <Form.Label>price</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Price\"\r\n                value={inputprice}\r\n                onChange={(e) => setInputprice(e.target.value)}\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <Form.Label>Category</Form.Label>\r\n              <br />\r\n              <select\r\n                value={inputcategory}\r\n                onChange={(e) => setInputcategory(e.target.value)}\r\n              >\r\n                <option>Select Category</option>\r\n                {createOption(categoryStore.category).map((data) => (\r\n                  <option key={data._id} value={data._id}>\r\n                    {data.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <Row>\r\n            <Col>\r\n              <Form.Label>Description</Form.Label>\r\n              <br />\r\n              <textarea\r\n                style={{ width: \"350px\", height: \"150px\" }}\r\n                value={inputdescription}\r\n                onChange={(e) => setInputdescription(e.target.value)}\r\n              ></textarea>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              {inputpicture.length > 0\r\n                ? inputpicture.map((pic, index) => (\r\n                    <p key={index}>\r\n                      {pic.name}{\" \"}\r\n                      <IoTrashOutline\r\n                        onClick={handledeletePicture.bind(this, index)}\r\n                      />\r\n                    </p>\r\n                  ))\r\n                : null}\r\n              <input\r\n                type=\"file\"\r\n                // onChange={(e) => handlePictureArray(e.target.files[0])}\r\n                onChange={handlePictureArray}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleCloseAdd}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleCloseAddProduct}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  };\r\n  const handleCollectionBin = () => {\r\n    if (senddeletelist.length > 0) {\r\n      confirmAlert({\r\n        title: \"Are you sure to delete this \",\r\n        message: senddeletelist.map((data, index) => (\r\n          <p key={index}>{data.name}</p>\r\n        )),\r\n        buttons: [\r\n          {\r\n            label: \"Yes\",\r\n            onClick: () =>\r\n              dispatch(deleteProductIndatabase(senddeletelist)).then(() => {\r\n                dispatch(getProduct());\r\n                setSenddeletelist([]);\r\n              }),\r\n          },\r\n          {\r\n            label: \"No\",\r\n          },\r\n        ],\r\n      });\r\n    }\r\n  };\r\n\r\n  const CancleDelete = () => {\r\n    if (product.product.length > 0) {\r\n      const test = [];\r\n      for (let i = 0; i < product.product.length; i++) {\r\n        test.push(false);\r\n      }\r\n      setDeletelist(test);\r\n    }\r\n    setSenddeletelist([]);\r\n    setDeleteProduct(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <Layout sidebar>\r\n        {/* <IoMdAddCircle\r\n          style={{ position: \"fixed\", right: \"0px\" }}\r\n          size=\"50px\"\r\n          onClick={() => setShowAdd(true)}\r\n        /> */}\r\n        <div style={{ position: \"fixed\", right: \"0px\" }}>\r\n          <p>\r\n            <IoMdAddCircle size=\"50px\" onClick={() => setShowAdd(true)} />\r\n          </p>\r\n          <p>\r\n            {!deleteProduct ? (\r\n              <IoTrashOutline\r\n                size=\"50px\"\r\n                onClick={() => setDeleteProduct(true)}\r\n                style={{ cursor: \"pointer\" }}\r\n              />\r\n            ) : (\r\n              <>\r\n                <AiFillDelete\r\n                  size=\"50px\"\r\n                  onClick={handleCollectionBin}\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <br />\r\n                <br />\r\n                <ImCross\r\n                  size=\"35px\"\r\n                  onClick={CancleDelete}\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n              </>\r\n            )}\r\n          </p>\r\n        </div>\r\n        {renderTableProduct()}\r\n        {renderModalPopup()}\r\n        {renderModalAdd()}\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n","D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\reducer\\productReducer.js",["127","128"],"import { productType } from \"../action/type\";\r\n\r\nconst initailState = {\r\n  product: [],\r\n  laoding: false,\r\n  error: [],\r\n};\r\n\r\nexport default (state = initailState, action) => {\r\n  switch (action.type) {\r\n    case productType.GET_ALL_PRODUCT_REQUEST:\r\n      state = {\r\n        ...state,\r\n        laoding: true,\r\n      };\r\n      break;\r\n    case productType.GET_ALL_PRODUCT_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        product: action.payload.product,\r\n      };\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","D:\\react\\app\\eccomerce\\eccomerce-admin\\src\\action\\productAction.js",["129","130","131"],"import { productType } from \"./type\";\r\nimport axios from \"../helper/axios\";\r\nexport const createProduct = (form) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: productType.ADD_NEW_PRODUCT_REQUEST });\r\n    try {\r\n      const res = await axios.post(\"/create/product\", form);\r\n      if (res.status == 201) {\r\n        console.log(\"create success\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error.response);\r\n    }\r\n  };\r\n};\r\n\r\nexport const getProduct = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await axios.post(\"/get/product\");\r\n      if (res.status == 200) {\r\n        dispatch({\r\n          type: productType.GET_ALL_PRODUCT_SUCCESS,\r\n          payload: res.data,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error.repose);\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteProductIndatabase = (payload) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await axios.post(\"/delete/product\", { payload });\r\n      if (res.status == 200) {\r\n        console.log(\"Delete Success\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error.response);\r\n    }\r\n  };\r\n};\r\n",{"ruleId":"132","severity":1,"message":"133","line":6,"column":35,"nodeType":"134","messageId":"135","endLine":6,"endColumn":40},{"ruleId":"132","severity":1,"message":"136","line":6,"column":42,"nodeType":"134","messageId":"135","endLine":6,"endColumn":48},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"132","severity":1,"message":"141","line":5,"column":27,"nodeType":"134","messageId":"135","endLine":5,"endColumn":33},{"ruleId":"142","severity":1,"message":"143","line":16,"column":13,"nodeType":"144","endLine":24,"endColumn":4},{"ruleId":"142","severity":1,"message":"145","line":24,"column":6,"nodeType":"146","endLine":24,"endColumn":25,"suggestions":"147"},{"ruleId":"148","severity":1,"message":"149","line":41,"column":13,"nodeType":"150","endLine":41,"endColumn":51},{"ruleId":"151","severity":1,"message":"152","line":11,"column":1,"nodeType":"153","endLine":67,"endColumn":3},{"ruleId":"154","severity":1,"message":"155","line":13,"column":3,"nodeType":"156","messageId":"157","endLine":65,"endColumn":4},{"ruleId":"158","severity":1,"message":"159","line":16,"column":16,"nodeType":"160","messageId":"161","endLine":16,"endColumn":18},{"ruleId":"158","severity":1,"message":"159","line":145,"column":15,"nodeType":"160","messageId":"161","endLine":145,"endColumn":17},{"ruleId":"158","severity":1,"message":"159","line":150,"column":15,"nodeType":"160","messageId":"161","endLine":150,"endColumn":17},{"ruleId":"151","severity":1,"message":"152","line":9,"column":1,"nodeType":"153","endLine":52,"endColumn":3},{"ruleId":"154","severity":1,"message":"155","line":10,"column":3,"nodeType":"156","messageId":"157","endLine":50,"endColumn":4},{"ruleId":"132","severity":1,"message":"162","line":1,"column":10,"nodeType":"134","messageId":"135","endLine":1,"endColumn":18},{"ruleId":"158","severity":1,"message":"159","line":68,"column":14,"nodeType":"160","messageId":"161","endLine":68,"endColumn":16},{"ruleId":"158","severity":1,"message":"159","line":71,"column":21,"nodeType":"160","messageId":"161","endLine":71,"endColumn":23},{"ruleId":"158","severity":1,"message":"163","line":74,"column":61,"nodeType":"160","messageId":"161","endLine":74,"endColumn":63},{"ruleId":"148","severity":1,"message":"149","line":171,"column":15,"nodeType":"150","endLine":175,"endColumn":17},{"ruleId":"148","severity":1,"message":"149","line":197,"column":21,"nodeType":"150","endLine":204,"endColumn":23},{"ruleId":"158","severity":1,"message":"163","line":276,"column":62,"nodeType":"160","messageId":"161","endLine":276,"endColumn":64},{"ruleId":"151","severity":1,"message":"152","line":9,"column":1,"nodeType":"153","endLine":25,"endColumn":3},{"ruleId":"154","severity":1,"message":"155","line":10,"column":3,"nodeType":"156","messageId":"157","endLine":23,"endColumn":4},{"ruleId":"158","severity":1,"message":"159","line":8,"column":22,"nodeType":"160","messageId":"161","endLine":8,"endColumn":24},{"ruleId":"158","severity":1,"message":"159","line":21,"column":22,"nodeType":"160","messageId":"161","endLine":21,"endColumn":24},{"ruleId":"158","severity":1,"message":"159","line":37,"column":22,"nodeType":"160","messageId":"161","endLine":37,"endColumn":24},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","no-native-reassign",["164"],"no-negated-in-lhs",["165"],"'Router' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["166"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'category' is defined but never used.","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},"Update the dependencies array to be: [auth.authenticate, dispatch]",{"range":"169","text":"170"},[849,868],"[auth.authenticate, dispatch]"]